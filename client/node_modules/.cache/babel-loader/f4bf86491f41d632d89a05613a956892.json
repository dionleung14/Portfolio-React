{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kung_\\\\code\\\\portfolio-react\\\\client\\\\src\\\\components\\\\ContactForm.js\";\nimport React, { useState } from \"react\";\nimport FirstHeader from \"./FirstHeader\";\nimport API from \"../utils/API\";\nexport default function ContactForm() {\n  const logged = () => {\n    console.log(\"completed\");\n  };\n\n  const handleSubmission = event => {\n    event.preventDefault();\n    let contactMethodCheck = Object.values(contactMethodState);\n\n    if (contactMethodCheck.includes(true)) {\n      let {\n        call,\n        email,\n        text\n      } = contactMethodState;\n      let {\n        firstName,\n        lastName,\n        emailAddress,\n        phNum,\n        subject,\n        message\n      } = formState;\n      let contactFormFilled = {\n        firstName,\n        lastName,\n        emailAddress,\n        phNum,\n        subject,\n        message,\n        call,\n        email,\n        text\n      };\n      API.submitMessage(contactFormFilled).then(res => logged().catch(err => console.log(err)));\n      console.log(contactFormFilled);\n    } else {\n      alert(\"Please select a method for me to reach you\");\n    }\n  };\n\n  const [formState, setFormState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    emailAddress: \"\",\n    phNum: 0,\n    subject: \"\",\n    message: \"\"\n  });\n\n  const handleInput = event => {\n    event.preventDefault();\n    setFormState({ ...formState,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const [contactMethodState, setContactMethodState] = useState({\n    email: true,\n    call: false,\n    text: false\n  });\n\n  const contactMethodStr = string => {\n    let firstLet = string.slice(0, 1);\n    let rest = string.slice(1);\n    let combined = firstLet.toUpperCase().concat(rest);\n    let printed = combined + \" me!\";\n    return printed;\n  };\n\n  const handleToggle = ({\n    target\n  }) => setContactMethodState(s => ({ ...s,\n    [target.name]: !s[target.name]\n  }));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-8/12 mx-auto border border-black border-2 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FirstHeader, {\n    text: \"Contact me!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"testclass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"w-3/4 my-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Hit me up! Have any questions? Want to collaborate together? Secretly dying to know my favorite song? Send me an email and I'll get back to you as soon as I can!\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"text-center\",\n    id: \"contact-form\",\n    onSubmit: handleSubmission,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-around border-white border-2 px-6 py-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/4 mx-4 border-blue-600 border-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: formState.firstName,\n    onChange: handleInput,\n    placeholder: \"First Name\",\n    name: \"firstName\" // id=\"first-name\"\n    ,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/4 mx-4 border-blue-600 border-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"viewerName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"name\",\n    className: \"\",\n    id: \"last-name\",\n    onChange: handleInput,\n    value: formState.lastName,\n    name: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-around border-white border-2 px-6 py-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/4 mx-4 border border-red-200 border-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"\",\n    id: \"inputEmail\",\n    \"aria-describedby\": \"emailHelp\",\n    onChange: handleInput,\n    name: \"emailAddress\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"I'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/4 mx-4 border border-red-200 border-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"phoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"phonenumber\",\n    className: \"\",\n    id: \"phoneNumber\",\n    onChange: handleInput,\n    name: \"phNum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"I'll never share your phone number with anyone else either.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/4 mx-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"viewerName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"Subject\"), /*#__PURE__*/React.createElement(\"select\", {\n    type: \"name\",\n    className: \"\",\n    id: \"subject\",\n    value: formState.subject,\n    name: \"subject\",\n    onChange: handleInput,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Networking\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, \"Networking\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Inquiry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"Inquiry\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Collaboration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, \"Collaboration\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, \"Other (specify in message)\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, \"Message\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"message\",\n    className: \" w-full\",\n    id: \"message\",\n    name: \"message\",\n    onChange: handleInput,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"How would you like me to respond? Check all that apply\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, Object.keys(contactMethodState).map(key => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: handleToggle,\n    key: key,\n    name: key,\n    checked: contactMethodState[key],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, contactMethodStr(key)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"border border-green-400 py-2 px-4 bg-green-400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"Submit\")))));\n}","map":{"version":3,"sources":["C:/Users/kung_/code/portfolio-react/client/src/components/ContactForm.js"],"names":["React","useState","FirstHeader","API","ContactForm","logged","console","log","handleSubmission","event","preventDefault","contactMethodCheck","Object","values","contactMethodState","includes","call","email","text","firstName","lastName","emailAddress","phNum","subject","message","formState","contactFormFilled","submitMessage","then","res","catch","err","alert","setFormState","handleInput","target","name","value","setContactMethodState","contactMethodStr","string","firstLet","slice","rest","combined","toUpperCase","concat","printed","handleToggle","s","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FirstHeader from \"./FirstHeader\";\nimport API from \"../utils/API\";\n\nexport default function ContactForm() {\n  const logged = () => {\n    console.log(\"completed\");\n  };\n\n  const handleSubmission = (event) => {\n    event.preventDefault();\n    let contactMethodCheck = Object.values(contactMethodState);\n    if (contactMethodCheck.includes(true)) {\n      let { call, email, text } = contactMethodState;\n      let {\n        firstName,\n        lastName,\n        emailAddress,\n        phNum,\n        subject,\n        message,\n      } = formState;\n      let contactFormFilled = {\n        firstName,\n        lastName,\n        emailAddress,\n        phNum,\n        subject,\n        message,\n        call,\n        email,\n        text,\n      };\n      API.submitMessage(contactFormFilled).then((res) =>\n        logged().catch((err) => console.log(err))\n      );\n      console.log(contactFormFilled);\n    } else {\n      alert(\"Please select a method for me to reach you\");\n    }\n  };\n\n  const [formState, setFormState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    emailAddress: \"\",\n    phNum: 0,\n    subject: \"\",\n    message: \"\",\n  });\n\n  const handleInput = (event) => {\n    event.preventDefault();\n    setFormState({\n      ...formState,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const [contactMethodState, setContactMethodState] = useState({\n    email: true,\n    call: false,\n    text: false,\n  });\n\n  const contactMethodStr = (string) => {\n    let firstLet = string.slice(0, 1);\n    let rest = string.slice(1);\n    let combined = firstLet.toUpperCase().concat(rest);\n    let printed = combined + \" me!\";\n    return printed;\n  };\n\n  const handleToggle = ({ target }) =>\n    setContactMethodState((s) => ({ ...s, [target.name]: !s[target.name] }));\n\n  return (\n    <div className=\"w-8/12 mx-auto border border-black border-2 px-4\">\n      <FirstHeader text=\"Contact me!\" />\n      <div className=\"testclass\">\n        <h3 className=\"w-3/4 my-8\">\n          Hit me up! Have any questions? Want to collaborate together? Secretly\n          dying to know my favorite song? Send me an email and I'll get back to\n          you as soon as I can!\n        </h3>\n        <form\n          className=\"text-center\"\n          id=\"contact-form\"\n          onSubmit={handleSubmission}\n        >\n          {/* <input\n            type=\"text\"\n            value={inputName.inputField}\n            onChange={handleInput}\n          />\n          <h1>Text being typed: {inputName.inputField}</h1> */}\n\n          {/* <form> */}\n          {/* <!-- First and Last Name --> */}\n          <div className=\"flex items-center justify-around border-white border-2 px-6 py-12\">\n            {/* <!-- First Name --> */}\n            <div className=\"w-1/4 mx-4 border-blue-600 border-2\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={formState.firstName}\n                onChange={handleInput}\n                placeholder=\"First Name\"\n                name=\"firstName\"\n                // id=\"first-name\"\n                required\n              />\n            </div>\n            {/* <!-- Last Name --> */}\n            <div className=\"w-1/4 mx-4 border-blue-600 border-2\">\n              <label htmlFor=\"viewerName\">Last Name</label>\n              <input\n                type=\"name\"\n                className=\"\"\n                id=\"last-name\"\n                onChange={handleInput}\n                value={formState.lastName}\n                name=\"lastName\"\n              />\n            </div>\n          </div>\n\n          {/* <!-- Email and phone number --> */}\n          <div className=\"flex items-center justify-around border-white border-2 px-6 py-12\">\n            <div className=\"w-1/4 mx-4 border border-red-200 border-2\">\n              <label htmlFor=\"inputEmail\">Email address</label>\n              <input\n                type=\"email\"\n                className=\"\"\n                id=\"inputEmail\"\n                aria-describedby=\"emailHelp\"\n                onChange={handleInput}\n                name=\"emailAddress\"\n                required\n              />\n              <br />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                I'll never share your email with anyone else.\n              </small>\n            </div>\n            {/* <!-- Phone number --> */}\n            <div className=\"w-1/4 mx-4 border border-red-200 border-2\">\n              <label htmlFor=\"phoneNumber\">Phone Number</label>\n              <input\n                type=\"phonenumber\"\n                className=\"\"\n                id=\"phoneNumber\"\n                onChange={handleInput}\n                name=\"phNum\"\n              />\n              <br />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                I'll never share your phone number with anyone else either.\n              </small>\n            </div>\n          </div>\n\n          {/* Subject */}\n          <div className=\"w-1/4 mx-4\">\n            <div className=\"\">\n              <label htmlFor=\"viewerName\">Subject</label>\n              <select\n                type=\"name\"\n                className=\"\"\n                id=\"subject\"\n                value={formState.subject}\n                name=\"subject\"\n                onChange={handleInput}\n                required\n              >\n                <option value=\"Networking\">Networking</option>\n                <option value=\"Inquiry\">Inquiry</option>\n                <option value=\"Collaboration\">Collaboration</option>\n                <option value=\"Other\">Other (specify in message)</option>\n              </select>\n            </div>\n          </div>\n\n          {/* <!-- Message --> */}\n          <div className=\"test\">\n            <div className=\"w-full\">\n              <label htmlFor=\"message\">Message</label>\n              <input\n                type=\"message\"\n                className=\" w-full\"\n                id=\"message\"\n                name=\"message\"\n                onChange={handleInput}\n                required\n              />\n            </div>\n          </div>\n\n          {/* <!-- Preferred method of contact checkboxes --> */}\n          <div className=\"\">\n            <h1>How would you like me to respond? Check all that apply</h1>\n            <div>\n              {Object.keys(contactMethodState).map((key) => (\n                <div className=\"open\">\n                  <input\n                    type=\"checkbox\"\n                    onChange={handleToggle}\n                    key={key}\n                    name={key}\n                    checked={contactMethodState[key]}\n                  />\n                  <label>{contactMethodStr(key)}</label>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* <!-- Submit button --> */}\n          <div className=\"row\">\n            <button\n              type=\"submit\"\n              className=\"border border-green-400 py-2 px-4 bg-green-400\"\n            >\n              Submit\n            </button>\n          </div>\n          {/* <h1>This form should be at the bottom of the page</h1> */}\n        </form>\n      </div>\n\n      {/* Copied from tailwind docs */}\n      {/*<form className=\"w-full max-w-lg\">\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n            <label\n              className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              htmlFor=\"grid-first-name\"\n            >\n              First Name\n            </label>\n            <input\n              className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-red-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n              id=\"grid-first-name\"\n              type=\"text\"\n              placeholder=\"Jane\"\n            />\n            <p className=\"text-red-500 text-xs italic\">\n              Please fill out this field.\n            </p>\n          </div>\n          <div className=\"w-full md:w-1/2 px-3\">\n            <label\n              className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              htmlFor=\"grid-last-name\"\n            >\n              Last Name\n            </label>\n            <input\n              className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              id=\"grid-last-name\"\n              type=\"text\"\n              placeholder=\"Doe\"\n            />\n          </div>\n        </div>\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <div className=\"w-full px-3\">\n            <label\n              className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              htmlFor=\"grid-password\"\n            >\n              Password\n            </label>\n            <input\n              className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              id=\"grid-password\"\n              type=\"password\"\n              placeholder=\"******************\"\n            />\n            <p className=\"text-gray-600 text-xs italic\">\n              Make it as long and as crazy as you'd like\n            </p>\n          </div>\n        </div>\n        <div className=\"flex flex-wrap -mx-3 mb-2\">\n          <div className=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n            <label\n              className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              htmlFor=\"grid-city\"\n            >\n              City\n            </label>\n            <input\n              className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              id=\"grid-city\"\n              type=\"text\"\n              placeholder=\"Albuquerque\"\n            />\n          </div>\n          <div className=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n            <label\n              className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              htmlFor=\"grid-state\"\n            >\n              State\n            </label>\n            <div className=\"relative\">\n              <select\n                className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                id=\"grid-state\"\n              >\n                <option>New Mexico</option>\n                <option>Missouri</option>\n                <option>Texas</option>\n              </select>\n              <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  className=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n          <div className=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n            <label\n              className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              htmlFor=\"grid-zip\"\n            >\n              Zip\n            </label>\n            <input\n              className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              id=\"grid-zip\"\n              type=\"text\"\n              placeholder=\"90210\"\n            />\n          </div>\n        </div>\n        </form>*/}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}